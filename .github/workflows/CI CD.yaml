name: CI/CD

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: false

      - name: Download dependencies
        working-directory: ./shortener
        run: |
          go mod tidy
          go mod download

      - name: Lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          working-directory: ./shortener
          args: --out-format=tab
          skip-cache: true
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Test
        working-directory: ./shortener
        run: |
          go test -v -race -parallel 5 -shuffle=on -coverprofile=./cover.out -covermode=atomic ./...

      - name: Check coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          profile: shortener/cover.out
          source-dir: shortener

  deploy:
    needs: tests
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: "${{ secrets.SSH_KEY }}"
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"

      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Copy files
        run: rsync --archive --compress --progress --exclude='.env.example' --exclude='.gitignore' --exclude='README.md' --exclude='.github/' . ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}

      - name: Stop containers
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.SERVER_PATH }} && docker compose down"

      - name: Build new image
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.SERVER_PATH }} && COMPOSE_BAKE=true docker compose build web"

      - name: Cleanup images
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "docker image prune -f"

      - name: Build and start
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd ${{ secrets.SERVER_PATH }} && docker compose up -d"